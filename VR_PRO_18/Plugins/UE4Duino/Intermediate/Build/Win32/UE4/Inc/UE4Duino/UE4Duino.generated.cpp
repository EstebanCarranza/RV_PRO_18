// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/UE4DuinoPCH.h"
#include "UE4Duino.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1UE4Duino() {}
	void USerial::StaticRegisterNativesUSerial()
	{
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "Close",(Native)&USerial::execClose);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "Flush",(Native)&USerial::execFlush);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "GetBaud",(Native)&USerial::execGetBaud);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "GetPort",(Native)&USerial::execGetPort);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "IsOpened",(Native)&USerial::execIsOpened);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "Open",(Native)&USerial::execOpen);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "OpenComPort",(Native)&USerial::execOpenComPort);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "Print",(Native)&USerial::execPrint);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "Println",(Native)&USerial::execPrintln);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "ReadByte",(Native)&USerial::execReadByte);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "ReadBytes",(Native)&USerial::execReadBytes);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "ReadFloat",(Native)&USerial::execReadFloat);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "ReadInt",(Native)&USerial::execReadInt);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "Readln",(Native)&USerial::execReadln);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "ReadString",(Native)&USerial::execReadString);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "WriteByte",(Native)&USerial::execWriteByte);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "WriteBytes",(Native)&USerial::execWriteBytes);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "WriteFloat",(Native)&USerial::execWriteFloat);
		FNativeFunctionRegistrar::RegisterFunction(USerial::StaticClass(), "WriteInt",(Native)&USerial::execWriteInt);
	}
	IMPLEMENT_CLASS(USerial, 1464901705);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();

	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_Close();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_Flush();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_GetBaud();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_GetPort();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_IsOpened();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_Open();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_OpenComPort();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_Print();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_Println();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_ReadByte();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_ReadBytes();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_ReadFloat();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_ReadInt();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_Readln();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_ReadString();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_WriteByte();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_WriteBytes();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_WriteFloat();
	UE4DUINO_API class UFunction* Z_Construct_UFunction_USerial_WriteInt();
	UE4DUINO_API class UClass* Z_Construct_UClass_USerial_NoRegister();
	UE4DUINO_API class UClass* Z_Construct_UClass_USerial();
	UE4DUINO_API class UPackage* Z_Construct_UPackage__Script_UE4Duino();
	UFunction* Z_Construct_UFunction_USerial_Close()
	{
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Close"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Close COM"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_Flush()
	{
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Flush"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Flush COM"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_GetBaud()
	{
		struct Serial_eventGetBaud_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBaud"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(Serial_eventGetBaud_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventGetBaud_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Baud Rate"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_GetPort()
	{
		struct Serial_eventGetPort_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPort"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(Serial_eventGetPort_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventGetPort_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Port Number"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_IsOpened()
	{
		struct Serial_eventIsOpened_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOpened"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(Serial_eventIsOpened_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventIsOpened_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventIsOpened_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventIsOpened_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Is COM Open"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_Open()
	{
		struct Serial_eventOpen_Parms
		{
			int32 Port;
			int32 Baud;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Open"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventOpen_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventOpen_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventOpen_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventOpen_Parms), sizeof(bool), true);
			UProperty* NewProp_Baud = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Baud"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Baud, Serial_eventOpen_Parms), 0x0010000000000080);
			UProperty* NewProp_Port = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Port, Serial_eventOpen_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Baud"), TEXT("9600"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Port"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Open COM"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_OpenComPort()
	{
		struct Serial_eventOpenComPort_Parms
		{
			bool bOpened;
			int32 Port;
			int32 BaudRate;
			USerial* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OpenComPort"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(Serial_eventOpenComPort_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventOpenComPort_Parms), 0x0010000000000580, Z_Construct_UClass_USerial_NoRegister());
			UProperty* NewProp_BaudRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BaudRate"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaudRate, Serial_eventOpenComPort_Parms), 0x0010000000000080);
			UProperty* NewProp_Port = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Port, Serial_eventOpenComPort_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOpened, Serial_eventOpenComPort_Parms, bool);
			UProperty* NewProp_bOpened = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bOpened"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOpened, Serial_eventOpenComPort_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bOpened, Serial_eventOpenComPort_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_BaudRate"), TEXT("9600"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Port"), TEXT("1"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Open COM Port"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_Print()
	{
		struct Serial_eventPrint_Parms
		{
			FString String;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Print"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventPrint_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventPrint_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventPrint_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventPrint_Parms), sizeof(bool), true);
			UProperty* NewProp_String = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("String"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(String, Serial_eventPrint_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Print"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("send write string words text characters"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Writes a string without newline to the serial port."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_Println()
	{
		struct Serial_eventPrintln_Parms
		{
			FString String;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Println"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventPrintln_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventPrintln_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventPrintln_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventPrintln_Parms), sizeof(bool), true);
			UProperty* NewProp_String = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("String"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(String, Serial_eventPrintln_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Print Line"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("send write string words text characters"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Writes a string with newline at the end to the serial port."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_ReadByte()
	{
		struct Serial_eventReadByte_Parms
		{
			bool bSuccess;
			uint8 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReadByte"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(Serial_eventReadByte_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventReadByte_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, Serial_eventReadByte_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, Serial_eventReadByte_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bSuccess, Serial_eventReadByte_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Read a Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("get read receive"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_ReadBytes()
	{
		struct Serial_eventReadBytes_Parms
		{
			int32 Limit;
			TArray<uint8> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReadBytes"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventReadBytes_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventReadBytes_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Limit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Limit"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Limit, Serial_eventReadBytes_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Limit"), TEXT("256"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Read Bytes"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("get read receive"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_ReadFloat()
	{
		struct Serial_eventReadFloat_Parms
		{
			bool bSuccess;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReadFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(Serial_eventReadFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventReadFloat_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, Serial_eventReadFloat_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, Serial_eventReadFloat_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bSuccess, Serial_eventReadFloat_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Read a Float"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("get read receive"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_ReadInt()
	{
		struct Serial_eventReadInt_Parms
		{
			bool bSuccess;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReadInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(Serial_eventReadInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventReadInt_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, Serial_eventReadInt_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, Serial_eventReadInt_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bSuccess, Serial_eventReadInt_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Read an Int"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("get read receive integer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_Readln()
	{
		struct Serial_eventReadln_Parms
		{
			bool bSuccess;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Readln"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(Serial_eventReadln_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventReadln_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, Serial_eventReadln_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, Serial_eventReadln_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bSuccess, Serial_eventReadln_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Read Line"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("get read receive string words text characters"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Will read characters from Serial port until \\n (newline) is found"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_ReadString()
	{
		struct Serial_eventReadString_Parms
		{
			bool bSuccess;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReadString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(Serial_eventReadString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, Serial_eventReadString_Parms), 0x0010000000000580);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSuccess, Serial_eventReadString_Parms, bool);
			UProperty* NewProp_bSuccess = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSuccess"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSuccess, Serial_eventReadString_Parms), 0x0010000000000180, CPP_BOOL_PROPERTY_BITMASK(bSuccess, Serial_eventReadString_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Read String"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("get read receive string words text characters"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Will read characters from Serial port until \\0 (null char) is found or there are no\ncharacters left to read."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_WriteByte()
	{
		struct Serial_eventWriteByte_Parms
		{
			uint8 Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WriteByte"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventWriteByte_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventWriteByte_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventWriteByte_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventWriteByte_Parms), sizeof(bool), true);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Value, Serial_eventWriteByte_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Write a Byte"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("send"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_WriteBytes()
	{
		struct Serial_eventWriteBytes_Parms
		{
			TArray<uint8> Buffer;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WriteBytes"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventWriteBytes_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventWriteBytes_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventWriteBytes_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventWriteBytes_Parms), sizeof(bool), true);
			UProperty* NewProp_Buffer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Buffer"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Buffer, Serial_eventWriteBytes_Parms), 0x0010000000000080);
			UProperty* NewProp_Buffer_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Buffer, TEXT("Buffer"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Write Bytes"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("send"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_WriteFloat()
	{
		struct Serial_eventWriteFloat_Parms
		{
			float Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WriteFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventWriteFloat_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventWriteFloat_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventWriteFloat_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventWriteFloat_Parms), sizeof(bool), true);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, Serial_eventWriteFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Write a Float"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("send"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USerial_WriteInt()
	{
		struct Serial_eventWriteInt_Parms
		{
			int32 Value;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USerial();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WriteInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Serial_eventWriteInt_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Serial_eventWriteInt_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Serial_eventWriteInt_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Serial_eventWriteInt_Parms), sizeof(bool), true);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, Serial_eventWriteInt_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UE4Duino"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Write an Int"));
			MetaData->SetValue(ReturnFunction, TEXT("keywords"), TEXT("integer send"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USerial_NoRegister()
	{
		return USerial::StaticClass();
	}
	UClass* Z_Construct_UClass_USerial()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_UE4Duino();
			OuterClass = USerial::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_USerial_Close());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_Flush());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_GetBaud());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_GetPort());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_IsOpened());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_Open());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_OpenComPort());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_Print());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_Println());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_ReadByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_ReadBytes());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_ReadFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_ReadInt());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_Readln());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_ReadString());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_WriteByte());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_WriteBytes());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_WriteFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_USerial_WriteInt());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_Close(), "Close"); // 1350567572
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_Flush(), "Flush"); // 3635414707
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_GetBaud(), "GetBaud"); // 3703137633
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_GetPort(), "GetPort"); // 3835993618
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_IsOpened(), "IsOpened"); // 1571681521
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_Open(), "Open"); // 2305796878
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_OpenComPort(), "OpenComPort"); // 3787051088
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_Print(), "Print"); // 2692559778
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_Println(), "Println"); // 2069570535
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_ReadByte(), "ReadByte"); // 1708198095
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_ReadBytes(), "ReadBytes"); // 2586548387
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_ReadFloat(), "ReadFloat"); // 199841046
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_ReadInt(), "ReadInt"); // 1974950069
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_Readln(), "Readln"); // 1275233940
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_ReadString(), "ReadString"); // 272832843
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_WriteByte(), "WriteByte"); // 1450598094
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_WriteBytes(), "WriteBytes"); // 3043145191
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_WriteFloat(), "WriteFloat"); // 1583585307
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USerial_WriteInt(), "WriteInt"); // 1442987053
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("Category"), TEXT("UE4Duino"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Serial.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Serial.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USerial(Z_Construct_UClass_USerial, &USerial::StaticClass, TEXT("USerial"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USerial);
	UPackage* Z_Construct_UPackage__Script_UE4Duino()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/UE4Duino")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xD962B090;
			Guid.B = 0x6D4CB364;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
